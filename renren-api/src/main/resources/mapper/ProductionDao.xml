<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.ProductionDao">

    <resultMap id="productionList" type="io.renren.entity.ObjectCommodity">
        <result column="cId" property="id" />
        <result column="commodityName" property="commodityName" />
        <result column="commodityPicture" property="commodityPicture" />
        <result column="classificationFirstId" property="classificationFirstId" />
        <result column="classificationSecondId" property="classificationSecondId" />
        <result column="brandId" property="brandId" />
        <result column="cDate" property="date" />
        <result column="cDescription" property="description" />
        <association property="brand" javaType="io.renren.entity.Brand">
            <result column="bId" property="id" />
            <result column="brandName" property="brandName" />
            <result column="bUrl" property="url" />
        </association>
        <association property="sku" javaType="io.renren.entity.Sku">
            <result column="sId" property="id" />
            <result column="sCommodityId" property="commodityId" />
            <result column="inStock" property="inStock" />
            <result column="price" property="price" />
            <result column="skuName" property="skuName" />
            <result column="skuSalesVolume" property="skuSalesVolume" />
            <result column="inStockAddress" property="inStockAddress" />
            <result column="sDate" property="date" />
        </association>
    </resultMap>

    <select id="getProductions" resultMap="productionList" parameterType="Long">
        SELECT commodity.id AS cId,commodity.commodityName,commodity.commodityPicture,
        commodity.classificationFirstId,commodity.classificationSecondId,commodity.brandId,
        commodity.date AS cDate,commodity.description AS cDescription,c_brand.id AS bId,
        c_brand.brandName,c_brand.url AS bUrl,c_sku.id AS sId,c_sku.commodityId AS sCommodityId,
        c_sku.inStock,c_sku.skuName,c_sku.price,c_sku.date AS sDate,c_sku.skuSalesVolume,c_sku.inStockAddress
        FROM commodity
        LEFT JOIN c_brand ON commodity.brandId = c_brand.id
        LEFT JOIN c_sku ON commodity.id = c_sku.commodityId
        <if test="userId != null">
            LEFT JOIN user_production ON commodity.id = user_production.productionId
            <where>
                user_production.userId = #{userId}
            </where>
        </if>
    </select>

    <select id="getCommodityColor" resultType="io.renren.entity.CommodityColor" parameterType="String">
        SELECT * FROM c_commodity_color
        <where>
            <if test="commodityId != null and commodityId != ''">
                c_commodity_color.commodityId = #{commodityId}
            </if>
        </where>
    </select>
    <select id="getCommodityVersion" resultType="io.renren.entity.CommodityVersion" parameterType="String">
        SELECT * FROM c_commodity_version
        <where>
            <if test="commodityId != null and commodityId != ''">
                c_commodity_version.commodityId = #{commodityId}
            </if>
        </where>
    </select>
    <insert id="insertShoppingCar" parameterType="io.renren.entity.ShoppingCar">
        INSERT INTO c_shoppingcar
        (id,skuName,skuPrice,skuNumber,totalPrice,userId,commodityId,date,skuId,commodityPicture,isChoose,
        inStockAddress,color)
        VALUES (
            #{shoppingCar.id},
        <if test=" shoppingCar.skuName != null and shoppingCar.skuName != ''">
            #{shoppingCar.skuName},
        </if>
        <if test="shoppingCar.skuPrice != null">
            #{shoppingCar.skuPrice},
        </if>
        <if test="shoppingCar.skuNumber != null">
            #{shoppingCar.skuNumber},
        </if>
        <if test="shoppingCar.totalPrice != null">
            #{shoppingCar.totalPrice},
        </if>
        <if test="shoppingCar.userId != null and shoppingCar.userId != ''">
            #{shoppingCar.userId},
        </if>
        <if test="shoppingCar.commodityId != null and shoppingCar.commodityId != ''">
            #{shoppingCar.commodityId},
        </if>
            #{shoppingCar.date},
        <if test="shoppingCar.skuId != null and shoppingCar.skuId != ''">
            #{shoppingCar.skuId},
        </if>
        <if test="shoppingCar.commodityPicture != null and shoppingCar.commodityPicture != ''">
            #{shoppingCar.commodityPicture},
        </if>
        <if test=" shoppingCar.isChoose != null and shoppingCar.isChoose != ''">
            #{shoppingCar.isChoose},
        </if>
        <if test=" shoppingCar.inStockAddress != null and shoppingCar.inStockAddress != ''">
            #{shoppingCar.inStockAddress},
        </if>
        <if test="shoppingCar.color != null and shoppingCar.color != ''">
            #{shoppingCar.color}
        </if>
        )
    </insert>
    <select id="isExistCarProduction" parameterType="String" resultType="io.renren.entity.ShoppingCar">
        SELECT * FROM c_shoppingcar
        <where>
            <if test="commodityId != null and commodityId != ''">
                commodityId = #{commodityId}
            </if>
            <if test="skuId != null and skuId != ''">
                AND skuId = #{skuId}
            </if>
            <if test="colorId != null and colorId != ''">
                AND color = #{colorId}
            </if>
        </where>
    </select>
    <update id="updateCarProduction" parameterType="io.renren.entity.ShoppingCar">
        UPDATE c_shoppingcar SET
        <if test="shoppingCar.skuNumber != null">
            skuNumber = #{shoppingCar.skuNumber},
        </if>
        <if test="shoppingCar.totalPrice != null">
            totalPrice = #{shoppingCar.totalPrice}
        </if>
        <where>
            <if test="shoppingCar.commodityId != null and shoppingCar.commodityId != ''">
                commodityId = #{shoppingCar.commodityId}
            </if>
            <if test="shoppingCar.skuId != null and shoppingCar.skuId != ''">
                AND skuId = #{shoppingCar.skuId}
            </if>
            <if test="shoppingCar.color != null and shoppingCar.color != ''">
                AND color = #{shoppingCar.color}
            </if>
        </where>
    </update>
    <resultMap id="objectShoppingCar" type="io.renren.entity.ObjectShoppingCar">
        <result column="id" property="id" />
        <result column="skuName" property="skuName" />
        <result column="skuPrice" property="skuPrice" />
        <result column="skuNumber" property="skuNumber" />
        <result column="totalPrice" property="totalPrice" />
        <result column="userId" property="userId" />
        <result column="commodityId" property="commodityId" />
        <result column="skuId" property="skuId" />
        <result column="isChoose" property="isChoose" />
        <result column="commodityPicture" property="commodityPicture" />
        <result column="inStockAddress" property="inStockAddress" />
        <result column="color" property="color" />
        <result column="date" property="date" />
        <association property="commodityColor" javaType="io.renren.entity.CommodityColor">
            <result column="cId" property="id" />
            <result column="coCommodityId" property="commodityId" />
            <result column="commodityColor" property="commodityColor" />
            <result column="isUse" property="isUse" />
            <result column="cDate" property="date" />
            <result column="url" property="url" />
        </association>
        <association property="sku" javaType="io.renren.entity.Sku">
            <result column="sId" property="id" />
            <result column="sCommodityId" property="commodityId" />
            <result column="inStock" property="inStock" />
            <result column="price" property="price" />
            <result column="sSkuName" property="skuName" />
            <result column="skuSalesVolume" property="skuSalesVolume" />
            <result column="sInStockAddress" property="inStockAddress" />
            <result column="sDate" property="date" />
        </association>
    </resultMap>
    <select id="getShoppingCar" resultMap="objectShoppingCar">
        SELECT c_shoppingcar.*,c_commodity_color.id AS cId,c_commodity_color.commodityId
        AS coCommodityId,c_commodity_color.commodityColor,c_commodity_color.isUse,
        c_commodity_color.date AS cDate,c_commodity_color.url,c_sku.id AS sId,
        c_sku.commodityId AS sCommodityId,c_sku.inStock,c_sku.price,
        c_sku.skuName AS sSkuName,c_sku.skuSalesVolume,c_sku.inStockAddress AS sInStockAddress,
        c_sku.date AS sDate
        FROM c_shoppingcar LEFT JOIN c_commodity_color ON c_shoppingcar.color =
        c_commodity_color.id
        JOIN c_sku ON c_shoppingcar.skuId = c_sku.id
        <where>
            <if test="userId != null and userId != ''">
                c_shoppingcar.userId = #{userId}
            </if>
        </where>
    </select>
    <delete id="deleteShoppingCar" parameterType="String">
        DELETE FROM c_shoppingcar
        <where>
            <if test="id != null and id != ''">
                id = #{id}
            </if>
        </where>
    </delete>
    <select id="getIsChooseShoppingCar" resultMap="objectShoppingCar">
        SELECT c_shoppingcar.*,c_commodity_color.id AS cId,c_commodity_color.commodityId
        AS coCommodityId,c_commodity_color.commodityColor,c_commodity_color.isUse,
        c_commodity_color.date AS cDate,c_commodity_color.url,c_sku.id AS sId,
        c_sku.commodityId AS sCommodityId,c_sku.inStock,c_sku.price,
        c_sku.skuName AS sSkuName,c_sku.skuSalesVolume,c_sku.inStockAddress AS sInStockAddress,
        c_sku.date AS sDate
        FROM c_shoppingcar LEFT JOIN c_commodity_color ON c_shoppingcar.color =
        c_commodity_color.id
        LEFT JOIN c_sku ON c_shoppingcar.skuId = c_sku.id
        <where>
            c_shoppingcar.isChoose = "0"
            <if test="userId != null and userId != ''">
                AND c_shoppingcar.userId = #{userId}
            </if>
        </where>
    </select>
    <update id="changeCarStatus" parameterType="String">
        UPDATE c_shoppingcar SET
        <if test="isChoose != null and isChoose != ''">
            isChoose = #{isChoose}
        </if>
        <where>
            <if test="id != null and id != ''">
                id = #{id}
            </if>
        </where>
    </update>
    <update id="changeCarNumber" parameterType="io.renren.entity.ShoppingCar">
        UPDATE c_shoppingcar SET
        <if test="shoppingCar.skuNumber != null">
            skuNumber = #{shoppingCar.skuNumber},
        </if>
        <if test="shoppingCar.totalPrice != null">
            totalPrice = #{shoppingCar.totalPrice}
        </if>
        <where>
            <if test="shoppingCar.id != null and shoppingCar.id != ''">
                id = #{shoppingCar.id}
            </if>
        </where>
    </update>
    <delete id="deleteCarProductions" parameterType="Long">
        DELETE FROM c_shoppingCar
        <where>
            <if test="userId != null and userId != ''">
                userId = #{userId}
            </if>
        </where>
    </delete>
    <select id="isExistAddress" parameterType="String" resultType="io.renren.entity.Address">
        SELECT * FROM address
        <where>
            <if test="id != null and id != ''">
                id = #{id}
            </if>
        </where>
    </select>
    <insert id="saveAddress" parameterType="io.renren.entity.Address">
        INSERT INTO address
        (id,userAddress,detailAddress,addressStatus,userId,name,tel)
        VALUES (
        <if test="address.id != null and address.id != ''">
            #{address.id},
        </if>
        <if test="address.userAddress != null and address.userAddress != ''">
            #{address.userAddress},
        </if>
        <if test="address.detailAddress != null and address.detailAddress != ''">
            #{address.detailAddress},
        </if>
        <if test="address.addressStatus != null">
            #{address.addressStatus},
        </if>
        <if test="address.userId != null and address.userId != ''">
            #{address.userId},
        </if>
        <if test="address.name != null and address.name != ''">
            #{address.name},
        </if>
        <if test="address.tel != null and address.tel != ''">
            #{address.tel}
        </if>
        )
    </insert>
    <update id="updateAddress" parameterType="io.renren.entity.Address">
        UPDATE address SET
        <if test="address.userAddress != null and address.userAddress != ''">
            userAddress = #{address.userAddress},
        </if>
        <if test="address.detailAddress != null and address.detailAddress != ''">
            detailAddress = #{address.detailAddress},
        </if>
        <if test="address.addressStatus != null">
            addressStatus = #{address.addressStatus},
        </if>
        <if test="address.userId != null and address.userId != ''">
            userId = #{address.userId},
        </if>
        <if test="address.name != null and address.name != ''">
            name = #{address.name},
        </if>
        <if test="address.tel != null and address.tel != ''">
            tel = #{address.tel}
        </if>
        <where>
            <if test="address.id != null and address.id !=''">
                id = #{address.id}
            </if>
        </where>
    </update>
    <update id="updateState">
        UPDATE address SET
        addressStatus = 1
        <where>
            <if test="id != null and id != ''">
                id != #{id}
            </if>
            <if test="userId != null">
                AND userId = #{userId}
            </if>
        </where>
    </update>
    <select id="getDefaultAddress" parameterType="Long" resultType="io.renren.entity.Address">
        SELECT * FROM address
        <where>
                addressStatus = 0
            <if test="userId != null">
                AND userId = #{userId}
            </if>
        </where>
    </select>
    <select id="getAddress" parameterType="Long" resultType="io.renren.entity.Address">
        SELECT * FROM address
        <where>
            <if test="userId != null">
                userId = #{userId}
            </if>
        </where>
    </select>
</mapper>